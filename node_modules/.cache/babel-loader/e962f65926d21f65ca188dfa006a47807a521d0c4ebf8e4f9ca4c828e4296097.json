{"ast":null,"code":"var _jsxFileName = \"/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchPosts } from '../ajax-requests';\nimport { Message } from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s();\n  let {\n    posts,\n    token,\n    setMessage\n  } = _ref;\n  const [searching, setSearching] = useState('');\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  function handleMessage(id) {\n    setPosts(id);\n  }\n\n  //     const searchPosts = () => {\n  //      for (const _element of posts) {\n  //         return (posts.title)\n  //     }\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Message\",\n      onChange: event => setMessage({\n        content: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postBody\",\n      children: posts && posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: post.isAuthor ? \"myPost\" : 'singlePost',\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", post.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date Posted: \", post.updatedAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Author: \", post.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), post.isAuthor ? /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 46\n          }, this) : null, post.isAuthor ? /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 46\n          }, this) : null, token === null ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.isAuthor === false ? /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Message\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"messageButton\",\n                onClick: () => handleMessage(post._id),\n                children: \"Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 60\n            }, this) : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 52\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Posts, \"kwchPSiGgZ5aefO0PKaOKHKD8hk=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Link","fetchPosts","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_ref","_s","posts","token","setMessage","searching","setSearching","handleMessage","id","setPosts","children","type","placeholder","onChange","event","content","target","value","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","isAuthor","title","description","price","updatedAt","author","username","to","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { fetchPosts } from '../ajax-requests'\nimport { Message } from './Message'\n \n\nfunction Posts({ posts, token, setMessage }) {\n   const [searching, setSearching] = useState('');\n    \n   useEffect(() => {\n   fetchPosts()\n }, [])\n\n\n    function handleMessage (id)  {\n        setPosts(id)\n    }\n\n//     const searchPosts = () => {\n//      for (const _element of posts) {\n//         return (posts.title)\n//     }\n//  }\n\n    return (\n        <>\n            {/* {token === null ? '' : <Link to='/create-post'>Add Post</Link>}\n            <input\n            className='searchBar'\n            type='text'\n            placeholder='Search Posts'\n            value={searching}\n            onChange={(event) => {\n                setSearching(event.target.value)\n                searchPosts()\n                \n            }}\n            ></input> */}\n            <input\n                 type=\"text\"\n                 placeholder=\"Enter Message\"\n                 onChange={(event) => setMessage({content: event.target.value})} \n                />\n                \n     \n            \n            <div className='postBody'>\n                {posts && posts.map((post) => {\n                    return (\n                        <div\n                        key={post._id}\n                        className= {post.isAuthor ? \"myPost\" : 'singlePost'}>\n                            <h3>{post.title}</h3>\n                            <p>{post.description}</p>\n                            <p>Price: {post.price}</p>\n                            <p>Date Posted: {post.updatedAt}</p>\n                            <p>Author: {post.author.username}</p>\n                            {post.isAuthor ? <button>Edit</button> :null}\n                            {post.isAuthor ? <button>Delete</button> :null}\n\n\n                            {token === null ? '' : <div>\n                                {post.isAuthor === false ? <Link to=\"/Message\">\n                                    <button className=\"messageButton\" onClick={() => handleMessage(post._id)}>Message</button>\n                                </Link> : ''\n                                }\n                            </div>\n\n                            }\n\n                       </div> \n                       \n                    \n                    )\n                  \n                })\n               \n            }\n            </div>\n        </>\n    );\n}\n\n\n\n\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}