{"ast":null,"code":"const COHORT_NAME = '2301-ftb-et-web-pt';\nconst BASE_URL = `https://strangers-things.herokuapp.com/api/${COHORT_NAME}`;\nexport const myData = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const resp = await fetch('https://strangers-things.herokuapp.com/api/2211-ftb-et-web-pt/users/me', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await resp.json();\n    console.log('profile me data', data);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const registerUser = async user => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    });\n    const result = await response.json();\n    // You can log ▲▲▲ the result\n    // here ▼▼▼ to view the json object before returning it\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/posts`);\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const login = async user => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const makePost = async (token, post) => {\n  try {\n    const response = await fetch(`${BASE_URL}/posts`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["COHORT_NAME","BASE_URL","myData","token","localStorage","getItem","resp","fetch","method","headers","data","json","console","log","err","registerUser","user","response","body","JSON","stringify","result","error","fetchPosts","login","makePost","post"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/ajax-requests/index.js"],"sourcesContent":["const COHORT_NAME = '2301-ftb-et-web-pt'\nconst BASE_URL = `https://strangers-things.herokuapp.com/api/${COHORT_NAME}`\n\n\nexport const myData = async () => {\n    try {\n        const token = localStorage.getItem('token');\n        const resp = await fetch('https://strangers-things.herokuapp.com/api/2211-ftb-et-web-pt/users/me', {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        });\n        const data = await resp.json();\n        console.log('profile me data', data);\n        return data\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n\nexport const registerUser = async (user) => {\n\n    try {\n        const response = await fetch(\n            `${BASE_URL}/users/register`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user\n\n            })\n        });\n        const result = await response.json();\n        // You can log ▲▲▲ the result\n        // here ▼▼▼ to view the json object before returning it\n        console.log(result)\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport const fetchPosts = async () => {\n    try {\n        const response = await fetch(`${BASE_URL}/posts`)\n\n        const result = await response.json();\n        console.log(result);\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport const login = async (user) => {\n\n    try {\n        const response = await fetch(`${BASE_URL}/users/login`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n               user\n            })\n        });\n        const result = await response.json();\n        console.log(result);\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport const makePost = async (token, post) => {\n\n    try {\n        const response = await fetch(`${BASE_URL}/posts`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n               post\n            })\n        });\n        const result = await response.json();\n        console.log(result);\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}