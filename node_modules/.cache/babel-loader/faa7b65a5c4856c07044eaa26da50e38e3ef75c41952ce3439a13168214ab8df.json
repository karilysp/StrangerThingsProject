{"ast":null,"code":"var _jsxFileName = \"/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { updatePost } from '../ajax-requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditPost(_ref) {\n  _s();\n  let {\n    posts,\n    token,\n    getPosts\n  } = _ref;\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [post] = posts.filter(post => post._id === postId);\n  const {\n    title,\n    description,\n    price,\n    location,\n    willDeliver\n  } = post;\n  const [updatedTitle, setTitle] = useState(title);\n  const [updatedDescription, setDescription] = useState(description);\n  const [updatedPrice, setPrice] = useState(price);\n  const [updatedLocation, setLocation] = useState(location);\n  const [updatedWillDeliver, setWillDeliver] = useState(willDeliver);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const updatedPost = {\n      title: updatedTitle,\n      description: updatedDescription,\n      price: updatedPrice,\n      location: updatedLocation,\n      willDeliver: updatedWillDeliver\n    };\n    const results = await updatePost(postId, token, updatedPost);\n    if (results.success) {\n      getPosts();\n      navigate('/');\n    } else {\n      setErrorMessage(results.error.message);\n    }\n  };\n\n  // async function updatedPost () {\n\n  //     const editedPost = {\n  //     token: token,\n  //     title: updatedTitle,\n  //     description: updatedDescription,\n  //     price: updatedPrice,\n  //     location: updatedLocation,\n  //     title: updatedTitle,\n\n  // }\n\n  // await updatePost(editedPost)\n  //     navigate('/posts')\n  // }\n\n  // onSubmit = {(event)=>\n  // {\n  //     event.preventDefault();\n  //     updatedPost();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"edit-post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"editTitle\",\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-title\",\n        type: \"text\",\n        value: updatedTitle,\n        onChange: ev => setTitle(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-description\",\n        type: \"text\",\n        value: updatedDescription,\n        onChange: ev => setDescription(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-price\",\n        type: \"text\",\n        value: updatedPrice,\n        onChange: ev => setPrice(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-location\",\n        type: \"text\",\n        value: updatedLocation,\n        onChange: ev => setLocation(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"willDeliver\",\n        type: \"checkbox\",\n        checked: updatedWillDeliver,\n        onChange: () => setWillDeliver(!updatedWillDeliver)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Post Does Not Exist.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EditPost, \"Ykjp421aRrg6T4uzPQL/hy1o+0Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","updatePost","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","_ref","_s","posts","token","getPosts","postId","navigate","post","filter","_id","title","description","price","location","willDeliver","updatedTitle","setTitle","updatedDescription","setDescription","updatedPrice","setPrice","updatedLocation","setLocation","updatedWillDeliver","setWillDeliver","handleSubmit","event","preventDefault","updatedPost","results","success","setErrorMessage","error","message","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","ev","target","checked","_c","$RefreshReg$"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/EditPost.js"],"sourcesContent":["import React, {  useState } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { updatePost } from '../ajax-requests'\n\nfunction EditPost ({ posts, token, getPosts  }) {\n    \n\nconst { postId } = useParams();\nconst navigate = useNavigate();\n\nconst [post] = posts.filter((post) => post._id === postId)\n\nconst {title, description, price, location, willDeliver} = post;\n\nconst [updatedTitle, setTitle] = useState(title);\nconst [updatedDescription, setDescription] = useState(description);\nconst [updatedPrice, setPrice] = useState(price);\nconst [updatedLocation, setLocation] = useState(location);\nconst [updatedWillDeliver, setWillDeliver] = useState(willDeliver);\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const updatedPost = {\n            title: updatedTitle,\n            description: updatedDescription,\n            price: updatedPrice,\n            location: updatedLocation,\n            willDeliver: updatedWillDeliver\n        }\n\n        const results = await updatePost(postId, token, updatedPost);\n        if (results.success) {\n            getPosts();\n            navigate('/');\n        } else {\n            setErrorMessage(results.error.message)\n        }\n    }\n\n// async function updatedPost () {\n    \n//     const editedPost = {\n//     token: token,\n//     title: updatedTitle,\n//     description: updatedDescription,\n//     price: updatedPrice,\n//     location: updatedLocation,\n//     title: updatedTitle,\n    \n// }\n\n// await updatePost(editedPost)\n//     navigate('/posts')\n// }\n    \n    // onSubmit = {(event)=>\n    // {\n    //     event.preventDefault();\n    //     updatedPost();\n\n\n\n    return (\n    <>\n        {post ? (    \n<form className=\"edit-post\" onSubmit={handleSubmit}>\n    <h1 className=\"editTitle\">Edit Post</h1>\n    <input\n    className=\"edit-title\"\n    type='text'\n    value={updatedTitle}\n    onChange={(ev) => setTitle(ev.target.value)}\n    />\n    <input\n    className=\"edit-description\"\n    type='text'\n    value={updatedDescription}\n    onChange={(ev) => setDescription(ev.target.value)}\n    />\n    <input\n    className=\"edit-price\"\n    type='text'\n    value={updatedPrice}\n    onChange={(ev) => setPrice(ev.target.value)}\n    />\n    <input\n    className=\"edit-location\"\n    type='text'\n    value={updatedLocation}\n    onChange={(ev) => setLocation(ev.target.value)}\n    />\n    <input\n    className=\"willDeliver\"\n    type='checkbox'\n    checked={updatedWillDeliver}\n    onChange={() => setWillDeliver(!updatedWillDeliver)}\n    />\n    <button type=\"submit\">Save</button>\n</form>\n        ) : (\n            <h1> Post Does Not Exist.</h1>\n        )}\n        </>\n    )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}