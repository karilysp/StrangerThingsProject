{"ast":null,"code":"var _jsxFileName = \"/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { updatePost } from '../ajax-requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditPost(_ref) {\n  _s();\n  let {\n    posts,\n    token,\n    getPosts\n  } = _ref;\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [post] = posts.filter(post => post._id === postId);\n  const {\n    title,\n    description,\n    price,\n    location,\n    willDeliver\n  } = post ? post : {};\n  const [updatedTitle, setTitle] = useState(title);\n  const [updatedDescription, setDescription] = useState(description);\n  const [updatedPrice, setPrice] = useState(price);\n  const [updatedLocation, setLocation] = useState(location);\n  const [updatedWillDeliver, setWillDeliver] = useState(willDeliver);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    updatePost(postId);\n    const updatedPost = {\n      title: updatedTitle,\n      description: updatedDescription,\n      price: updatedPrice,\n      location: updatedLocation,\n      title: updatedTitle\n    };\n    const results = await EditPost(postId, token, updatedPost);\n    if (results.success) {\n      navigate('/posts');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedTitle,\n        onChange: ev => set(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedDescription,\n        onChange: ev => setDescription(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedPrice,\n        onChange: ev => setPrice(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedLocation,\n        onChange: ev => setLocation(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: updatedWillDeliver,\n        onChange: () => setWillDeliver(!updatedWillDeliver)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Post Does Not Exist.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EditPost, \"Ykjp421aRrg6T4uzPQL/hy1o+0Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","updatePost","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","_ref","_s","posts","token","getPosts","postId","navigate","post","filter","_id","title","description","price","location","willDeliver","updatedTitle","setTitle","updatedDescription","setDescription","updatedPrice","setPrice","updatedLocation","setLocation","updatedWillDeliver","setWillDeliver","handleSubmit","event","preventDefault","updatedPost","results","success","children","onSubmit","type","value","onChange","ev","set","target","fileName","_jsxFileName","lineNumber","columnNumber","checked","_c","$RefreshReg$"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/EditPost.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { updatePost } from '../ajax-requests'\n\nfunction EditPost ({ posts, token, getPosts }) {\n\nconst { postId } = useParams();\nconst navigate = useNavigate();\nconst [post] = posts.filter((post) => post._id === postId)\n\nconst {title, description, price, location, willDeliver} = post ? post : {};\n\nconst [updatedTitle, setTitle] = useState(title)\nconst [updatedDescription, setDescription] = useState(description)\nconst [updatedPrice, setPrice] = useState(price)\nconst [updatedLocation, setLocation] = useState(location)\nconst [updatedWillDeliver, setWillDeliver] = useState(willDeliver)\n\nconst handleSubmit = async (event) => {\n    event.preventDefault();\n     updatePost(postId);\n\n\nconst updatedPost = {\n    title: updatedTitle,\n    description: updatedDescription,\n    price: updatedPrice,\n    location: updatedLocation,\n    title: updatedTitle\n}\n\nconst results = await EditPost(postId, token,updatedPost);\nif (results.success) {\n    navigate('/posts')\n}\n}\n    return (\n    <>\n        {post ? (    \n<form onSubmit={handleSubmit}>\n    <input\n    type='text'\n    value={updatedTitle}\n    onChange={(ev) => set(ev.target.value)}\n    />\n    <input\n    type='text'\n    value={updatedDescription}\n    onChange={(ev) => setDescription(ev.target.value)}\n    />\n    <input\n    type='text'\n    value={updatedPrice}\n    onChange={(ev) => setPrice(ev.target.value)}\n    />\n    <input\n    type='text'\n    value={updatedLocation}\n    onChange={(ev) => setLocation(ev.target.value)}\n    />\n    <input\n    type='checkbox'\n    checked={updatedWillDeliver}\n    onChange={() => setWillDeliver(!updatedWillDeliver)}\n    />\n    <button type=\"submit\">Save Changes</button>\n</form>\n        ) : (\n            <h1> Post Does Not Exist.</h1>\n        )}\n        </>\n    )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}