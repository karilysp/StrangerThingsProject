{"ast":null,"code":"var _jsxFileName = \"/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { updatePost } from '../ajax-requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditPost(_ref) {\n  _s();\n  let {\n    posts\n  } = _ref;\n  const {\n    postId\n  } = useParams();\n  const [post] = posts.filter(post => post._id === postId);\n  const {\n    title,\n    description,\n    price,\n    location,\n    willDeliver\n  } = post ? post : {};\n  const [updatedTitle, setTitle] = useState(title);\n  const [updatedDescription, setDescription] = useState(description);\n  const [updatedPrice, setPrice] = useState(price);\n  const [updatedLocation, setLocation] = useState(location);\n  const [updatedWillDeliver, setWillDeliver] = useState(willDeliver);\n  const handleSubmit = async () => {\n    updatePost(postId);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedTitle,\n        onChange: ev => set(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedDescription,\n        onChange: ev => setDescription(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedPrice,\n        onChange: ev => setPrice(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedLocation,\n        onChange: ev => setLocation(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: updatedWillDeliver,\n        onChange: () => setWillDeliver(!updatedWillDeliver)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Post Does Not Exist.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EditPost, \"dQ3+kIouBaGsP/r6n22c6RNiKQ0=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useParams","updatePost","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","_ref","_s","posts","postId","post","filter","_id","title","description","price","location","willDeliver","updatedTitle","setTitle","updatedDescription","setDescription","updatedPrice","setPrice","updatedLocation","setLocation","updatedWillDeliver","setWillDeliver","handleSubmit","children","onSubmit","type","value","onChange","ev","set","target","fileName","_jsxFileName","lineNumber","columnNumber","checked","_c","$RefreshReg$"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/EditPost.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport { updatePost } from '../ajax-requests'\n\nfunction EditPost ({ posts }) {\n\nconst { postId } = useParams();\n\nconst [post] = posts.filter((post) => post._id === postId)\n\nconst {title, description, price, location, willDeliver} = post ? post : {};\n\nconst [updatedTitle, setTitle] = useState(title)\nconst [updatedDescription, setDescription] = useState(description)\nconst [updatedPrice, setPrice] = useState(price)\nconst [updatedLocation, setLocation] = useState(location)\nconst [updatedWillDeliver, setWillDeliver] = useState(willDeliver)\n\nconst handleSubmit = async () => {\n     updatePost(postId);\n}\n\n    return (\n    <>\n        {post ? (    \n<form onSubmit={handleSubmit}>\n    <input\n    type='text'\n    value={updatedTitle}\n    onChange={(ev) => set(ev.target.value)}\n    />\n    <input\n    type='text'\n    value={updatedDescription}\n    onChange={(ev) => setDescription(ev.target.value)}\n    />\n    <input\n    type='text'\n    value={updatedPrice}\n    onChange={(ev) => setPrice(ev.target.value)}\n    />\n    <input\n    type='text'\n    value={updatedLocation}\n    onChange={(ev) => setLocation(ev.target.value)}\n    />\n    <input\n    type='checkbox'\n    checked={updatedWillDeliver}\n    onChange={() => setWillDeliver(!updatedWillDeliver)}\n    />\n    <button type=\"submit\">Save Changes</button>\n</form>\n        ) : (\n            <h1> Post Does Not Exist.</h1>\n        )}\n        </>\n    )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}