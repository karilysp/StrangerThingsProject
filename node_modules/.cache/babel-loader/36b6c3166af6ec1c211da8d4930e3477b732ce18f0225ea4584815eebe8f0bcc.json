{"ast":null,"code":"var _jsxFileName = \"/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/Posts.js\";\nimport React from 'react';\nimport { fetchPosts } from '../ajax-requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst token = window.localStorage.getItem('token');\nfunction Posts(_ref) {\n  let {\n    posts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this), posts && posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: post.isAuthor ? 'singlePost my Post' : 'singlePost',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n// const Posts = ({posts}) => {\n\n//     return (\n//         <div>\n//             <h1>Posts</h1>\n//             <form></form>\n//             <p>Create a post here:</p>\n\n//             <button onClick={() => createPost(token)}>Create Post</button>\n\n//             <ul>\n//                 {posts?.map((post => {\n//                     console.log(post);\n//                     return (\n//                         <ul className=\"cards\">\n//                             <li\n//                                 key={post._id}\n//                                 className={post.isAuthor ? \"myPost\" : \"singlePost\"}\n//                             >\n//                                 <Link to={`/posts/${post.id}`} className=\"link\">\n//                                     <h3>{post.title}</h3>\n//                                 </Link>\n//                                 <p>{post.description}</p>\n//                                 <p>Price: {post.price}</p>\n//                                 <p>Location: {post.location}</p>\n//                                 <p>Date Posted: {post.updatedAt}</p>\n//                                 <p>Author: {post.author.username}</p>\n//                                 {post.isAuthor ? <button>Edit</button> : null}\n//                             </li>\n//                         </ul>\n//                     );\n//                 }))}\n//             </ul>\n//         </div>\n//     );\n// };  \n_c = Posts;\nconst createPost = async token => {\n  try {\n    const response = await fetch(`${`https://strangers-things.herokuapp.com/api/${COHORT_NAME}`}/posts`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: {\n          title: `${postTitle}`,\n          description: `${postDescription}`,\n          price: `${postPrice}`,\n          willDeliver: true\n        }\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","fetchPosts","jsxDEV","_jsxDEV","Fragment","_Fragment","token","window","localStorage","getItem","Posts","_ref","posts","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","className","isAuthor","title","description","_id","_c","createPost","response","fetch","COHORT_NAME","method","headers","body","JSON","stringify","postTitle","postDescription","price","postPrice","willDeliver","result","json","console","log","err","error","$RefreshReg$"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/Posts.js"],"sourcesContent":["import React from 'react';\nimport { fetchPosts } from '../ajax-requests'\n\nconst token = window.localStorage.getItem('token');\n\nfunction Posts({ posts }) {\n   \n\n    return (\n        <>\n            \n            \n                <h1>Posts</h1>\n                {posts && posts.map((post) => {\n                    return (\n                        <div\n                        key={post._id}\n                        className= {post.isAuthor ? 'singlePost my Post' : 'singlePost'}>\n                            <h3>{post.title}</h3>\n                            <p>{post.description}</p>\n                       </div> \n                    )\n                })\n            }\n        </>\n    );\n}\n\n// const Posts = ({posts}) => {\n   \n\n\n//     return (\n//         <div>\n//             <h1>Posts</h1>\n//             <form></form>\n//             <p>Create a post here:</p>\n\n//             <button onClick={() => createPost(token)}>Create Post</button>\n\n//             <ul>\n//                 {posts?.map((post => {\n//                     console.log(post);\n//                     return (\n//                         <ul className=\"cards\">\n//                             <li\n//                                 key={post._id}\n//                                 className={post.isAuthor ? \"myPost\" : \"singlePost\"}\n//                             >\n//                                 <Link to={`/posts/${post.id}`} className=\"link\">\n//                                     <h3>{post.title}</h3>\n//                                 </Link>\n//                                 <p>{post.description}</p>\n//                                 <p>Price: {post.price}</p>\n//                                 <p>Location: {post.location}</p>\n//                                 <p>Date Posted: {post.updatedAt}</p>\n//                                 <p>Author: {post.author.username}</p>\n//                                 {post.isAuthor ? <button>Edit</button> : null}\n//                             </li>\n//                         </ul>\n//                     );\n//                 }))}\n//             </ul>\n//         </div>\n//     );\n// };  \n\n\nconst createPost = async (token) => {\n\n    try {\n        const response = await fetch(`${`https://strangers-things.herokuapp.com/api/${COHORT_NAME}`}/posts`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post: {\n                    title: `${postTitle}`,\n                    description: `${postDescription}`,\n                    price: `${postPrice}`,\n                    willDeliver: true\n                }\n            })\n        });\n        const result = await response.json();\n        console.log(result);\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport default Posts;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAElD,SAASC,KAAKA,CAAAC,IAAA,EAAY;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAGpB,oBACIR,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBAGQV,OAAA;MAAAU,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACbL,KAAK,IAAIA,KAAK,CAACM,GAAG,CAAEC,IAAI,IAAK;MAC1B,oBACIhB,OAAA;QAEAiB,SAAS,EAAGD,IAAI,CAACE,QAAQ,GAAG,oBAAoB,GAAG,YAAa;QAAAR,QAAA,gBAC5DV,OAAA;UAAAU,QAAA,EAAKM,IAAI,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACrBd,OAAA;UAAAU,QAAA,EAAIM,IAAI,CAACI;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,GAHxBE,IAAI,CAACK,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIR;IAEb,CAAC,CAAC;EAAA,gBAEP;AAEX;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAQ,EAAA,GA5DSf,KAAK;AA+Dd,MAAMgB,UAAU,GAAG,MAAOpB,KAAK,IAAK;EAEhC,IAAI;IACA,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAG,8CAA6CC,WAAY,EAAE,QAAO,EAAE;MACjGC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASzB,KAAM;MACrC,CAAC;MACD0B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBf,IAAI,EAAE;UACFG,KAAK,EAAG,GAAEa,SAAU,EAAC;UACrBZ,WAAW,EAAG,GAAEa,eAAgB,EAAC;UACjCC,KAAK,EAAG,GAAEC,SAAU,EAAC;UACrBC,WAAW,EAAE;QACjB;MACJ,CAAC;IACL,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG,MAAMb,QAAQ,CAACc,IAAI,EAAE;IACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,OAAOA,MAAM;EACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACVF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;EACtB;AACJ,CAAC;AAED,eAAelC,KAAK;AAAC,IAAAe,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}