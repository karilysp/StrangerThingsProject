{"ast":null,"code":"var _jsxFileName = \"/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchPosts } from '../ajax-requests';\nimport { Message } from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s();\n  let {\n    posts,\n    token\n  } = _ref;\n  const [searching, setSearching] = useState('');\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const searchPosts = posts => {\n    for (const [index, value] of [posts].entries) {\n      // return (posts.title)\n      console.log(index, value);\n    }\n  };\n  function handleMessage() {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [token === null ? '' : /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/create-post\",\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar\",\n      type: \"text\",\n      placeholder: \"Search Posts\",\n      value: searching,\n      onChange: event => {\n        setSearching(event.target.value);\n        searchPosts();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postBody\",\n      children: posts && posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: post.isAuthor ? \"myPost\" : 'singlePost',\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", post.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date Posted: \", post.updatedAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Author: \", post.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), post.isAuthor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/update-post/${post._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: token === null ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: post.isAuthor === false ? /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Message\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"messageButton\",\n                  onClick: () => handleMessage(post._id),\n                  children: \"Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 60\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 28\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Posts, \"kwchPSiGgZ5aefO0PKaOKHKD8hk=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Link","fetchPosts","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_ref","_s","posts","token","searching","setSearching","searchPosts","index","value","entries","console","log","handleMessage","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","event","target","map","post","isAuthor","title","description","price","updatedAt","author","username","_id","onClick","_c","$RefreshReg$"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { fetchPosts } from '../ajax-requests'\nimport { Message } from './Message'\n \n\nfunction Posts ({ posts, token }) {\n   const [searching, setSearching] = useState('');\n    \n   useEffect(() => {\n   fetchPosts()\n }, [])\n\n\n  const searchPosts = (posts) => {\n     for (const [index,value] of [posts].entries) {\n        // return (posts.title)\n        console.log(index,value)\n    }\n }\n\n    function handleMessage() {\n\n    }\n\n \n  \n\n    return (\n        <>\n            {token === null ? '' : <Link to='/create-post'>Add Post</Link>}\n            <input\n            className='searchBar'\n            type='text'\n            placeholder='Search Posts'\n            value={searching}\n            onChange={(event) => {\n                setSearching(event.target.value)\n                searchPosts()\n                \n            }}\n            ></input>\n           \n                \n     \n            \n            <div className='postBody'>\n                {posts && posts.map((post) => {\n                    return (\n                        <div\n                        key={post._id}\n                        className= {post.isAuthor ? \"myPost\" : 'singlePost'}>\n                            <h3>{post.title}</h3>\n                            <p>{post.description}</p>\n                            <p>Price: {post.price}</p>\n                            <p>Date Posted: {post.updatedAt}</p>\n                            <p>Author: {post.author.username}</p>\n                \n                          \n                            {post.isAuthor ? ( \n                                <>\n                             <Link to={`/update-post/${post._id}`} ><button>Edit</button></Link>\n                            <button>Delete</button>\n                \n                                </>\n                \n                           ) : (\n                           \n                           <div>\n                            {token === null ? '' : <div>\n                                {post.isAuthor === false ? <Link to=\"/Message\">\n                                    <button className=\"messageButton\" onClick={() => handleMessage(post._id)}>Message</button>\n                                </Link> : ''\n                                }\n                                        \n                            </div>\n                           \n                            }\n                                \n                       </div> \n                   \n                    \n                    )}\n                    \n                    </div> \n                              \n                 ) })\n                 \n                }   \n                   \n            </div>\n        </>\n        \n                    );\n                    \n}\n\n\n\n\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}