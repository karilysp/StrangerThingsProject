{"ast":null,"code":"var _jsxFileName = \"/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { updatePost } from '../ajax-requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditPost(_ref) {\n  _s();\n  let {\n    posts,\n    token\n  } = _ref;\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [post] = posts.filter(post => post._id === postId);\n  const {\n    title,\n    description,\n    price,\n    location,\n    willDeliver\n  } = post;\n  const [updatedTitle, setTitle] = useState(title);\n  const [updatedDescription, setDescription] = useState(description);\n  const [updatedPrice, setPrice] = useState(price);\n  const [updatedLocation, setLocation] = useState(location);\n  const [updatedWillDeliver, setWillDeliver] = useState(willDeliver);\n  async function updatedPost() {\n    const editedPost = {\n      token: token,\n      title: updatedTitle,\n      description: updatedDescription,\n      price: updatedPrice,\n      location: updatedLocation,\n      title: updatedTitle,\n      id: postId\n    };\n    await updatePost(editedPost);\n    navigate('/posts');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"edit-post\",\n      onSubmit: event => {\n        event.preventDefault();\n        updatedPost();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"editTitle\",\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-title\",\n        type: \"text\",\n        value: updatedTitle,\n        onChange: ev => setTitle(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-description\",\n        type: \"text\",\n        value: updatedDescription,\n        onChange: ev => setDescription(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-price\",\n        type: \"text\",\n        value: updatedPrice,\n        onChange: ev => setPrice(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-location\",\n        type: \"text\",\n        value: updatedLocation,\n        onChange: ev => setLocation(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"willDeliver\",\n        type: \"checkbox\",\n        checked: updatedWillDeliver,\n        onChange: () => setWillDeliver(!updatedWillDeliver)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Post Does Not Exist.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EditPost, \"Ykjp421aRrg6T4uzPQL/hy1o+0Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","updatePost","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","_ref","_s","posts","token","postId","navigate","post","filter","_id","title","description","price","location","willDeliver","updatedTitle","setTitle","updatedDescription","setDescription","updatedPrice","setPrice","updatedLocation","setLocation","updatedWillDeliver","setWillDeliver","updatedPost","editedPost","id","children","className","onSubmit","event","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","ev","target","checked","_c","$RefreshReg$"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/components/EditPost.js"],"sourcesContent":["import React, {  useState } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { updatePost } from '../ajax-requests'\n\nfunction EditPost ({ posts, token  }) {\n    \n\nconst { postId } = useParams();\nconst navigate = useNavigate();\n\nconst [post] = posts.filter((post) => post._id === postId)\n\nconst {title, description, price, location, willDeliver} = post;\n\nconst [updatedTitle, setTitle] = useState(title);\nconst [updatedDescription, setDescription] = useState(description);\nconst [updatedPrice, setPrice] = useState(price);\nconst [updatedLocation, setLocation] = useState(location);\nconst [updatedWillDeliver, setWillDeliver] = useState(willDeliver);\n\n\n\n\nasync function updatedPost () {\n    const editedPost = {\n    token: token,\n    title: updatedTitle,\n    description: updatedDescription,\n    price: updatedPrice,\n    location: updatedLocation,\n    title: updatedTitle,\n    id: postId\n}\nawait updatePost(editedPost)\n    navigate('/posts')\n}\n    \n\n\n\n    return (\n    <>\n        {post ? (    \n<form className=\"edit-post\" onSubmit={(event)=> {event.preventDefault();\nupdatedPost();\n}}>\n    <h1 className=\"editTitle\">Edit Post</h1>\n    <input\n    className=\"edit-title\"\n    type='text'\n    value={updatedTitle}\n    onChange={(ev) => setTitle(ev.target.value)}\n    />\n    <input\n    className=\"edit-description\"\n    type='text'\n    value={updatedDescription}\n    onChange={(ev) => setDescription(ev.target.value)}\n    />\n    <input\n    className=\"edit-price\"\n    type='text'\n    value={updatedPrice}\n    onChange={(ev) => setPrice(ev.target.value)}\n    />\n    <input\n    className=\"edit-location\"\n    type='text'\n    value={updatedLocation}\n    onChange={(ev) => setLocation(ev.target.value)}\n    />\n    <input\n    className=\"willDeliver\"\n    type='checkbox'\n    checked={updatedWillDeliver}\n    onChange={() => setWillDeliver(!updatedWillDeliver)}\n    />\n    <button type=\"submit\">Save</button>\n</form>\n        ) : (\n            <h1> Post Does Not Exist.</h1>\n        )}\n        </>\n    )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}