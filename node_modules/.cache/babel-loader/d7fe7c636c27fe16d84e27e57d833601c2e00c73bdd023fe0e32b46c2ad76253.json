{"ast":null,"code":"const COHORT_NAME = '2301-ftb-et-web-pt';\nconst BASE_URL = `https://strangers-things.herokuapp.com/api/${COHORT_NAME}`;\nexport const myData = async _ref => {\n  let {\n    url,\n    method,\n    token,\n    body\n  } = _ref;\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    if (token) {\n      options.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    console.log(\"Call API Request URL: \", API_URL + url);\n    console.log(\"Call API Options: \", options);\n    const response = await fetch(API_URL + url, options);\n    const data = await response.json();\n    console.log(\"data: \", data);\n    if (data.error) throw data.error;\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n  }\n};\nexport const registerUser = async user => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    });\n    const result = await response.json();\n    // You can log ▲▲▲ the result\n    // here ▼▼▼ to view the json object before returning it\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/posts`);\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const login = async user => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const makePost = async (token, post) => {\n  try {\n    const response = await fetch(`${BASE_URL}/posts`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["COHORT_NAME","BASE_URL","myData","_ref","url","method","token","body","options","toUpperCase","headers","JSON","stringify","console","log","API_URL","response","fetch","data","json","error","registerUser","user","result","err","fetchPosts","login","makePost","post"],"sources":["/Users/kari/Library/Mobile Documents/com~apple~CloudDocs/Code/Coding Bootcamp/Projects /StrangerThings/src/ajax-requests/index.js"],"sourcesContent":["const COHORT_NAME = '2301-ftb-et-web-pt'\nconst BASE_URL = `https://strangers-things.herokuapp.com/api/${COHORT_NAME}`\n\n\nexport const myData = async ({ url, method, token, body }) => {\n\n    try {\n        const options = {\n            method: method ? method.toUpperCase() : 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(body),\n        };\n        if (token) {\n            options.headers[\"Authorization\"] = `Bearer ${token}`;\n        }\n        console.log(\"Call API Request URL: \", API_URL + url);\n        console.log(\"Call API Options: \", options);\n        const response = await fetch(API_URL + url, options);\n        const data = await response.json();\n        console.log(\"data: \", data);\n        if (data.error) throw data.error;\n        return data;\n    } catch (error) {\n        console.error('ERROR: ', error);\n    }\n};\n\n\nexport const registerUser = async (user) => {\n\n    try {\n        const response = await fetch(\n            `${BASE_URL}/users/register`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user\n\n            })\n        });\n        const result = await response.json();\n        // You can log ▲▲▲ the result\n        // here ▼▼▼ to view the json object before returning it\n        console.log(result)\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport const fetchPosts = async () => {\n    try {\n        const response = await fetch(`${BASE_URL}/posts`)\n\n        const result = await response.json();\n        console.log(result);\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport const login = async (user) => {\n\n    try {\n        const response = await fetch(`${BASE_URL}/users/login`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n               user\n            })\n        });\n        const result = await response.json();\n        console.log(result);\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport const makePost = async (token, post) => {\n\n    try {\n        const response = await fetch(`${BASE_URL}/posts`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n               post\n            })\n        });\n        const result = await response.json();\n        console.log(result);\n        return result\n    } catch (err) {\n        console.error(err);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}